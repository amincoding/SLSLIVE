def bfs_search(src, target, visited_states):
    q = Queue()
    q.put((src, 0))
    while not q.empty():
        curr, g = q.get()
        if target == curr: return visited_states
        visited_states.append(curr)
        adj = possible_moves(curr, visited_states)
        scores = []
        selected_moves = []
        for move in adj: scores.append(h(move) + g)
        if len(scores) == 0:
            min_score = 0
        else:
            min_score = min(scores)
        for i in range(len(adj)):
            if scores[i] == min_score: selected_moves.append(adj[i])
        for move in selected_moves: q.put((move, g + 1))
    return None